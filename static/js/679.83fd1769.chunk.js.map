{"version":3,"file":"static/js/679.83fd1769.chunk.js","mappings":"gKAEMA,GAAiBC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kMASnBC,GAAeC,EAAAA,EAAAA,IAAO,SAAPA,CAAgBC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8sBACjC,SAACI,GAAK,OAAMA,EAAMC,WAAa,QAAU,MAAM,IAC1C,SAACC,GAAC,OAAKA,EAAEC,MAAK,2CAAgD,6GAA6G,IAI/K,SAACH,GAAK,OAAMA,EAAMI,QAAU,oBAAsB,gBAAgB,IAS9D,SAACJ,GAAK,OAAMA,EAAMI,QAAU,qCAAuC,MAAM,GAOxEX,E,qGC7BJY,EAAsB,SAACC,GAClC,OAAOA,EAAMC,MAAM,KAAKC,KAAI,SAACC,EAAMC,GAAK,OACtCC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAAA,QAAMC,UAAS,aAAAC,OAAeN,GAAQG,SAAEJ,IAAa,MADlCC,EAEJ,GAErB,EAEaO,EAAiB,SAACC,GAC7B,IAAIC,EAAY,EACZC,EAA2B,GACzBC,EAAQH,EAAKX,MAAM,KAoCzB,OAlCAc,EAAMC,SAAQ,SAACb,EAAMc,GACLd,EAAKF,MAAM,MACnBe,SAAQ,SAACE,EAAMC,GAKnB,GAJIA,EAAU,IACZL,EAASM,MAAKZ,EAAAA,EAAAA,KAAA,cAAAE,OAAeG,KAC7BA,KAEEK,EAAM,CACR,IAAIG,EAAeH,EACfI,EAAWL,EAAUF,EAAMQ,OAAS,EAAIR,EAAME,EAAU,GAAK,GAC7DC,EAAKM,SAAS,MAAQF,IACxBD,GAAgBC,EAChBP,EAAME,EAAU,GAAK,IAGvB,IAAMR,EAAY,CAAC,mBAAiB,2BAAyB,oBAAkB,sCAA8B,2BAAsB,yBAAoB,iBAAe,iBAAcgB,SAASJ,GAAgB,YAAc,GAC3NP,EAASM,MACPZ,EAAAA,EAAAA,KAAA,QAAgCC,UAAS,iBAAAC,OAAmBG,EAAS,KAAAH,OAAID,GAAYF,SAClFc,GAAY,QAAAX,OADIG,KAIrBA,GACF,CACF,IACII,EAAUF,EAAMQ,OAAS,IAC3BT,EAASM,MACPZ,EAAAA,EAAAA,KAAA,QAAiCC,UAAU,SAAQF,SAAC,QAEpD,SAAAG,OAFoBG,KAItBA,IAEJ,IAEOC,CACT,C,+JChDMY,GAAStC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wDAKlBqC,GAAevC,EAAAA,EAAAA,IAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wNAejBsC,EAAiBpC,EAAAA,GAAOqC,GAAEC,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,yiBAMxBqC,G,GAgBWnC,EAAAA,GAAOuC,IAAGC,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,sjCAOrBoC,G,2BCmCf,GAAeO,EAAAA,EAAAA,IAAf,EA9DoB,SAAHC,GAAuE,IAAjElC,EAAKkC,EAALlC,MAAOmC,EAAQD,EAARC,SAAUC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAAQC,EAAEJ,EAAFI,GAAIC,EAACL,EAADK,EAC3DC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAwCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAMC,EAAAA,EAAAA,QAAO,OAEnBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiBC,OAAOC,YAAc,IAAM,CAAC,IAAO,CAAC,IAErDC,EAAW,IAAIC,sBACnB,SAAAC,GAAc,IAAZC,GAAWhB,EAAAA,EAAAA,GAAAe,EAAA,GAAN,GACLb,EAAac,EAAMC,gBACfD,EAAMC,gBACRX,GAAgB,SAAAY,GAAO,OAAIA,EAAU,CAAC,GAE1C,GACA,CAAEC,UAAWT,IAOf,OAJIH,EAAIa,SACNP,EAASQ,QAAQd,EAAIa,SAGhB,WACDb,EAAIa,SACNP,EAASS,UAAUf,EAAIa,QAE3B,CACF,GAAG,IAMH,OACEvD,EAAAA,EAAAA,KAAC0D,EAAAA,GAAkB,CAAChB,IAAKA,EAAKZ,GAAIA,EAAIM,UAAWA,EAAUrC,UACzDF,EAAAA,EAAAA,MAAC8D,EAAAA,EAAG,CAACC,QAAQ,QAAQC,MAAM,SAAQ9D,SAAA,EACjCC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAK,CAAA/D,UAAgCR,EAAAA,EAAAA,GAAoBwC,EAAEvC,KAAO,SAAAU,OAA9CsC,KACrB3C,EAAAA,EAAAA,MAACkE,EAAAA,GAAc,CAAAhE,SAAA,EACbC,EAAAA,EAAAA,KAACgE,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGrE,UAClCF,EAAAA,EAAAA,MAACwE,EAAAA,GAAQ,CAACjC,UAAWA,EAAUrC,SAAA,EAC7BC,EAAAA,EAAAA,KAACoB,EAAc,CAAArB,SAAmCgC,EAAEJ,IAAS,YAAAzB,OAA5BsC,IAA8C,KAC/ExC,EAAAA,EAAAA,KAACsE,EAAAA,GAAO,CAAAvE,UACLI,EAAAA,EAAAA,GAAe4B,EAAEH,KAAS,WAAA1B,OADJsC,KAGzBxC,EAAAA,EAAAA,KAACjB,EAAAA,EAAY,CAACwF,QAfE,WAAO,IAADC,EACE,QAAlCA,EAAAC,SAASC,eAAe,kBAAU,IAAAF,GAAlCA,EAAoCG,eAAe,CAAEC,SAAU,UACjE,EAawDtF,SAAS,EAAMH,YAAY,EAAKY,SACzEgC,EAAEF,OACU,aAAA3B,OAPiCsC,OAUpDxC,EAAAA,EAAAA,KAACgE,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGrE,UAClCC,EAAAA,EAAAA,KAAC6E,EAAAA,GAAY,CAACzC,UAAWA,EAAUrC,UACjCF,EAAAA,EAAAA,MAAA,SAAOiF,UAAQ,EAACC,MAAI,EAACC,OAAK,EAACC,aAAW,EAAChF,UAAU,cAAaF,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,UAAQkF,IAAI,oCAAoCC,KAAK,eAAe,mDAE9D,iBAAAjF,OAJgDsC,aAWtE,G,kRCpFa4C,GAAWxG,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yIAW3BuG,GAAWzG,EAAAA,EAAAA,IAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iOAepBqC,GAAevC,EAAAA,EAAAA,IAAS0C,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,wNAgBxBwG,GAAc1G,EAAAA,EAAAA,IAAS4C,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,yIAWvByG,GAAY3G,EAAAA,EAAAA,IAAS4G,IAAAA,GAAA1G,EAAAA,EAAAA,GAAA,yIAWrB2G,GAAgB7G,EAAAA,EAAAA,IAAS8G,IAAAA,GAAA5G,EAAAA,EAAAA,GAAA,yIAWzB6G,GAAe/G,EAAAA,EAAAA,IAASgH,IAAAA,GAAA9G,EAAAA,EAAAA,GAAA,0IAYxBoC,GAAStC,EAAAA,EAAAA,IAASiH,IAAAA,GAAA/G,EAAAA,EAAAA,GAAA,yHAsDXuF,GAzCoBrF,EAAAA,GAAO8G,QAAOC,IAAAA,GAAAjH,EAAAA,EAAAA,GAAA,03BAqChC,SAAAI,GAAK,OAAIA,EAAMkD,WAAY4D,EAAAA,EAAAA,IAAGC,IAAAA,GAAAnH,EAAAA,EAAAA,GAAA,0FAAGoC,EAA4BoE,EAAiCD,GAAiD,MAAM,IAI5IrG,EAAAA,GAAOuC,IAAG2E,IAAAA,GAAApH,EAAAA,EAAAA,GAAA,yWAYnB,SAAAI,GAAK,OAAIA,EAAMkD,WAAY4D,EAAAA,EAAAA,IAAGG,IAAAA,GAAArH,EAAAA,EAAAA,GAAA,0FAAGoC,EAA4ByE,EAAkCN,GAAiD,MAAM,KA8C/Je,GA1CsBpH,EAAAA,GAAO6C,OAAMwE,IAAAA,GAAAvH,EAAAA,EAAAA,GAAA,u0BAazB,SAAAI,GAAK,OAAIA,EAAMoH,mBAAqB,UAAY,QAAQ,IACzD,SAAApH,GAAK,OAAIA,EAAMoH,oBAAqBN,EAAAA,EAAAA,IAAGO,IAAAA,GAAAzH,EAAAA,EAAAA,GAAA,2BAAGoC,GAA4B,MAAM,IA4BrE,SAACtB,GAAa,IAAE4G,EAASC,UAAA1F,OAAA,QAAA2F,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAI,OAAKT,EAAAA,EAAAA,IAAGW,IAAAA,GAAA7H,EAAAA,EAAAA,GAAA,mCACzCc,EAAQ4G,EAAS,GAGzB9C,EAAqB1E,EAAAA,GAAO8G,QAAOc,IAAAA,GAAA9H,EAAAA,EAAAA,GAAA,0xBAmCjC,SAAAI,GAAK,OAAIA,EAAMkD,WAAY4D,EAAAA,EAAAA,IAAGa,IAAAA,GAAA/H,EAAAA,EAAAA,GAAA,2BAAGoC,GAA4B,MAAM,IAIrE4C,GAAQ9E,EAAAA,EAAAA,IAAO,KAAPA,CAAY8H,IAAAA,GAAAhI,EAAAA,EAAAA,GAAA,0yBAclBqC,EAIEiE,EAGb2B,MAAMC,KAAK,CAAEjG,OAAQ,KAAM,SAACkG,EAAGrH,GAAK,OAAKoG,EAAAA,EAAAA,IAAGkB,IAAAA,GAAApI,EAAAA,EAAAA,GAAA,+CACpCc,EACJwG,EAAcxG,GAAM,KAYf0E,GAAUtF,EAAAA,EAAAA,IAAO,MAAPA,CAAamI,IAAAA,GAAArI,EAAAA,EAAAA,GAAA,gmDAOnBwG,EAIbyB,MAAMC,KAAK,CAAEjG,OAAQ,KAAM,SAACkG,EAAGrH,GAAK,OAAKoG,EAAAA,EAAAA,IAAGoB,IAAAA,GAAAtI,EAAAA,EAAAA,GAAA,oDAC/Bc,EACTwG,EAAcxG,EAAO,GAAE,IAUduB,EAaAkE,EAeAI,EAIbsB,MAAMC,KAAK,CAAEjG,OAAQ,MAAO,SAACkG,EAAGrH,GAAK,OAAKoG,EAAAA,EAAAA,IAAGqB,IAAAA,GAAAvI,EAAAA,EAAAA,GAAA,iDACnCc,EACNwG,EAAcxG,EAAO,KAAK,KA2BrBmE,IARW/E,EAAAA,EAAAA,IAAO,KAAPA,CAAYsI,IAAAA,GAAAxI,EAAAA,EAAAA,GAAA,+GAQNE,EAAAA,GAAOuC,IAAGgG,IAAAA,GAAAzI,EAAAA,EAAAA,GAAA,0cAkB3B+F,EAAe7F,EAAAA,GAAOuC,IAAGiG,IAAAA,GAAA1I,EAAAA,EAAAA,GAAA,6lCACvBwG,GAMA,SAAApG,GAAK,OAAIA,EAAMkD,WAAY4D,EAAAA,EAAAA,IAAGyB,IAAAA,GAAA3I,EAAAA,EAAAA,GAAA,2BAAGwG,GAAiC,MAAM,GAgBtEC,E","sources":["common/Button/styles.ts","common/utils/textAnimations.tsx","components/MiddleBlock/StyledMiddleBlock.tsx","components/MiddleBlock/index.tsx","components/MiddleBlock/styles.tsx"],"sourcesContent":["import styled, { css, keyframes } from \"styled-components\";\r\n\r\nconst clickAnimation = keyframes`\r\n  0% {\r\n    box-shadow: inset 0 0 0 0 #1b4f72;\r\n  }\r\n  100% {\r\n    box-shadow: inset 2px 2px 4px 0 #1b4f72, inset -2px -2px 4px 0 #1b4f72;  // Smoother and centered bevel effect\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled(\"button\")<{ glowing: boolean; fixedWidth: boolean }>`\r\n  width: ${(props) => (props.fixedWidth ? '180px' : '100%')};\r\n  background: ${(p) => p.color ? `linear-gradient(45deg, #286fff, #7aa9ff)` : \"radial-gradient(circle farthest-corner at center center, #286fff 0%, #397ad9 5%, #7aa9ff 90%, #7aa9ff 100%)\"};\r\n  color: #FFFFFF;\r\n  font-size: 1.1rem;\r\n  font-weight: 700;\r\n  border: ${(props) => (props.glowing ? '2px solid #286fff' : '1px solid #ccc')};  \r\n  border-radius: 8px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 1rem;  // Increased top margin\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  position: relative;\r\n  outline: none;\r\n  box-shadow: ${(props) => (props.glowing ? '0 0 10px #286fff, 0 0 20px #286fff' : 'none')};\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 20px #286fff, 0 0 30px #286fff, 0 0 34px #7aa9ff;  // Crisper glow on hover\r\n  }\r\n\r\n  &:active {\r\n    animation: ${clickAnimation} 0.1s forwards;  // Bevel effect on click\r\n  }\r\n\r\n  @media only screen and (max-width: 1025px) {\r\n    border: 2px solid #286fff;\r\n    box-shadow: 0 0 10px #286fff, 0 0 20px #286fff;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n","import React, { ReactElement } from 'react';\r\n\r\n// my-app/src/common/utils/textAnimations.tsx\r\n\r\nexport const splitTitleIntoWords = (title: string) => {\r\n  return title.split(' ').map((word, index) => (\r\n    <React.Fragment key={index}>\r\n      <span className={`word word-${index}`}>{word}</span>{' '}\r\n    </React.Fragment>\r\n  ));\r\n};\r\n\r\nexport const wrapParagraphs = (text: string): ReactElement[] => {\r\n  let wordIndex = 0;\r\n  let elements: ReactElement[] = [];\r\n  const words = text.split(' ');\r\n\r\n  words.forEach((word, wordIdx) => {\r\n    const parts = word.split('\\n');\r\n    parts.forEach((part, partIdx) => {\r\n      if (partIdx > 0) {\r\n        elements.push(<br key={`br-${wordIndex}`} />);\r\n        wordIndex++;\r\n      }\r\n      if (part) {\r\n        let modifiedPart = part;\r\n        let nextPart = wordIdx < words.length - 1 ? words[wordIdx + 1] : \"\";\r\n        if (part.endsWith(':') && nextPart) {\r\n          modifiedPart += nextPart;\r\n          words[wordIdx + 1] = \"\";\r\n        }\r\n        \r\n        const className = ['Film Industry', 'Notable Contributions', 'Music Industry', 'Health & Wellness Industry', 'Impact & Influence', 'Music & Wellness', 'Film Impact', 'Our Impact'].includes(modifiedPart) ? 'underline' : '';\r\n        elements.push(\r\n          <span key={`part-${wordIndex}`} className={`letter letter-${wordIndex} ${className}`}>\r\n            {modifiedPart}\r\n          </span>\r\n        );\r\n        wordIndex++;\r\n      }\r\n    });\r\n    if (wordIdx < words.length - 1) {\r\n      elements.push(\r\n        <span key={`space-${wordIndex}`} className=\"letter\">\r\n          &nbsp;\r\n        </span>\r\n      );\r\n      wordIndex++;\r\n    }\r\n  });\r\n\r\n  return elements;\r\n};","// StyledMiddleBlock.tsx\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n// Define the keyframes for the fadeIn animation\r\nconst fadeIn = keyframes`\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n`;\r\n\r\nconst textNeonGlow = keyframes`\r\n  from {\r\n    text-shadow: \r\n      0 0 1px #fff, \r\n      0 0 2px #286fff,\r\n      0 0 3px #286fff;\r\n  }\r\n  to {\r\n    text-shadow: \r\n      0 0 2px #fff, \r\n      0 0 3px #286fff,\r\n      0 0 6px #286fff;\r\n  }\r\n`;\r\n\r\nexport const StyledSubtitle = styled.h2`\r\n  font-size: 2.2em; // Default font size for larger screens\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #fff;\r\n  margin: 20px 0;\r\n  animation: ${textNeonGlow} 4s ease-in-out infinite alternate;\r\n\r\n  &:hover {\r\n    color: rgb(40, 111, 255); // Blue color on hover\r\n  }\r\n\r\n  // Media query for mobile devices\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 1.3em; // Smaller font size for mobile screens\r\n    // Additional styles for mobile can be added here\r\n  }\r\n\r\n  // Add more media queries if needed for different breakpoints\r\n`;\r\n\r\n// Styled component for the MiddleBlock\r\nconst StyledMiddleBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 50px;\r\n  background-color: #000000; // Dark background for contrast\r\n  animation: ${fadeIn} 2s ease forwards;\r\n  animation-delay: 3s; // Delay the appearance\r\n  border: 2px solid #fff; // Basic border, replace with your color preference\r\n\r\n  // Glowing border effect with neon reds and pinks\r\n  box-shadow: \r\n    0 0 5px #98b9fd, // Innermost shadow for tight glow\r\n    0 0 15px #286fff, // Medium glow\r\n    0 0 30px #fff, // Larger glow with a pink hue\r\n\r\n  // Ensuring the glow effect is smooth and doesn't cause layout shift\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: -2px; // Align with the border size\r\n    right: -2px; // Align with the border size\r\n    bottom: -2px; // Align with the border size\r\n    left: -2px; // Align with the border size\r\n    z-index: -1;\r\n    background: inherit;\r\n    border-radius: inherit; // Adjust this if your block has rounded corners\r\n  }\r\n`;\r\n\r\nexport default StyledMiddleBlock;\r\n","// MiddleBlock/index.tsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { StyledButton } from \"../../common/Button/styles\";\r\nimport { StyledSubtitle } from './StyledMiddleBlock';\r\nimport {\r\n  MiddleBlockSection,\r\n  Content,\r\n  ContentWrapper,\r\n  Title,\r\n  Subtitle,\r\n  ImageWrapper,\r\n  GreyArea,\r\n} from \"./styles\";\r\nimport { splitTitleIntoWords, wrapParagraphs } from \"../../common/utils/textAnimations\";\r\n\r\ninterface MiddleBlockProps {\r\n  title: string;\r\n  subtitle: string;\r\n  content: string;\r\n  button: string;\r\n  id?: string;\r\n  t: any;\r\n}\r\n\r\nconst MiddleBlock = ({ title, subtitle, content, button, id, t }: MiddleBlockProps) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [animationKey, setAnimationKey] = useState(0); // State to trigger re-animation\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const thresholdArray = window.innerWidth <= 768 ? [0.3] : [0.1];\r\n\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setIsVisible(entry.isIntersecting);\r\n        if (entry.isIntersecting) {\r\n          setAnimationKey(prevKey => prevKey + 1); // Increment key to re-trigger animations\r\n        }\r\n      },\r\n      { threshold: thresholdArray }\r\n    );\r\n\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n\r\n    return () => {\r\n      if (ref.current) {\r\n        observer.unobserve(ref.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const scrollToContactForm = () => {\r\n    document.getElementById('contact')?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <MiddleBlockSection ref={ref} id={id} isVisible={isVisible}>\r\n      <Row justify=\"start\" align=\"middle\">\r\n        <Title key={`title-${animationKey}`}>{splitTitleIntoWords(t(title))}</Title>\r\n        <ContentWrapper>\r\n          <Col lg={12} md={24} sm={24} xs={24}>\r\n            <GreyArea isVisible={isVisible} key={`grey-area-${animationKey}`}>\r\n              <StyledSubtitle key={`subtitle-${animationKey}`}>{t(subtitle)}</StyledSubtitle> {/* Subtitle inside GreyArea */}\r\n              <Content key={`content-${animationKey}`}>\r\n                {wrapParagraphs(t(content))}\r\n              </Content>\r\n              <StyledButton onClick={scrollToContactForm} glowing={true} fixedWidth={true}>\r\n                {t(button)}\r\n              </StyledButton>\r\n            </GreyArea>\r\n          </Col>\r\n          <Col lg={12} md={24} sm={24} xs={24}>\r\n            <ImageWrapper isVisible={isVisible} key={`image-wrapper-${animationKey}`}>\r\n              <video autoPlay loop muted playsInline className=\"intro-video\">\r\n                <source src=\"/img/video/phone-video-final.webm\" type=\"video/webm\" />\r\n                Your browser does not support the video tag.\r\n              </video>\r\n              </ImageWrapper>\r\n          </Col>\r\n        </ContentWrapper>\r\n      </Row>\r\n    </MiddleBlockSection>\r\n  );\r\n};\r\nexport default withTranslation()(MiddleBlock);\r\n","import styled, { css, keyframes } from \"styled-components\";\r\n\r\n// Keyframes for word animation\r\nexport const fadeInUp = keyframes`\r\n  from {\r\n    transform: translateY(20px);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst neonGlow = keyframes`\r\n  0% {\r\n    box-shadow: \r\n      0 0 4px #98b9fd,\r\n      0 0 12px #286fff, \r\n      0 0 30px #286fff;\r\n  }\r\n  100% {\r\n    box-shadow: \r\n      0 0 10px #98b9fd,\r\n      0 0 16px #286fff, \r\n      0 0 32px #286fff;\r\n  }\r\n`;\r\n\r\nconst textNeonGlow = keyframes`\r\n  from {\r\n    text-shadow: \r\n      0 0 1px #fff,\r\n      0 0 2px #286fff, \r\n      0 0 3px #286fff;\r\n  }\r\n  to {\r\n    text-shadow: \r\n      0 0 2px #fff,\r\n      0 0 6px #286fff, \r\n      0 0 8px #286fff;\r\n  }\r\n`;\r\n\r\n// Keyframes for image slide-in on desktop and up on mobile\r\nconst slideInLeft = keyframes`\r\n  from {\r\n    transform: translateX(100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst slideInUp = keyframes`\r\n  from {\r\n    transform: translateY(100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst fadeInLetters = keyframes`\r\n  from {\r\n    transform: translateY(20px);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst slideInRight = keyframes`\r\n  from {\r\n    transform: translateX(-100%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    visibility: hidden;\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\n// Define the StyledMiddleBlock with rounded corners and visibility hidden initially\r\n// Define the StyledMiddleBlock with visibility controlled by isVisible\r\nexport const StyledMiddleBlock = styled.section<{ isVisible: boolean }>`\r\n  position: relative;\r\n  padding: 1.5rem 0 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  border-radius: 20px;\r\n  visibility: hidden;\r\n  width: 100vw;\r\n  margin-left: calc(-50vw + 50%);\r\n  min-height: 600px;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100%;\r\n    background: url('/img/svg/middleblock-bg.svg') no-repeat center center;\r\n    background-size: cover;\r\n    z-index: -1;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(28, 28, 28, 0.9); // Dark gray overlay with 20% opacity\r\n    z-index: -2; // Ensure it's under the background image\r\n    border-radius: 20px; // Match the border-radius of the section\r\n  }\r\n\r\n  animation: ${props => props.isVisible ? css`${fadeIn} 2s ease forwards, ${slideInLeft} 1s ease forwards, ${neonGlow} 1.5s ease-in-out infinite alternate` : 'none'};\r\n`;\r\n\r\n// Update GreyArea for the glowing effect\r\nexport const GreyArea = styled.div<{ isVisible: boolean }>`\r\n  background-color: #000000;\r\n  padding: 1rem;\r\n  margin-top: 2rem;\r\n  border-radius: 12px;\r\n  border: 2px solid #ccc;\r\n  box-shadow: 0 0 4px rgba(255, 255, 255, 0.2),\r\n               0 0 12px rgba(255, 255, 255, 0.2),\r\n               0 0 20px rgba(255, 255, 255, 0.2);\r\n  visibility: hidden;\r\n\r\n  // Apply the neon glow animation\r\n  animation: ${props => props.isVisible ? css`${fadeIn} 2s ease forwards, ${slideInRight} 1s ease forwards, ${neonGlow} 1.5s ease-in-out infinite alternate` : 'none'};\r\n`;\r\n\r\n\r\nexport const StyledButton = styled.button<{ animationsFinished: boolean }>`\r\n  padding: 10px 20px;\r\n  background-color: #ff2d2d;\r\n  color: white; // Text color\r\n  font-size: 1.2em;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  transition: all 0.3s ease-in-out;\r\n  position: relative;\r\n  z-index: 2;\r\n  overflow: hidden;\r\n  visibility: ${props => props.animationsFinished ? 'visible' : 'hidden'};\r\n  animation: ${props => props.animationsFinished ? css`${fadeIn} 2s ease forwards` : 'none'};\r\n\r\n  // Neon glow effect\r\n  box-shadow: \r\n    0 0 5px #ff2d2d,\r\n    0 0 15px #ff2d2d,\r\n    0 0 30px #ff69b4,\r\n    0 0 45px #ff69b4,\r\n\r\n  // Text glow effect on hover\r\n  &:hover {\r\n    box-shadow: \r\n      0 0 10px #ffffff,\r\n      0 0 20px #fff,\r\n      0 0 30px #fff,\r\n    color: #ff69b4;\r\n  }\r\n\r\n  // Fallback for browsers that do not support the glow effect\r\n  &:focus {\r\n    background-color: #ff2d2d;\r\n    color: white;\r\n  }\r\n\r\n  // Add media queries if you need to adjust the sizes on different screen sizes\r\n`;\r\n\r\n// Helper function to generate delays\r\nconst generateDelay = (index: number, baseDelay = 0.05) => css`\r\n  animation-delay: ${index * baseDelay}s;\r\n`;\r\n\r\nexport const MiddleBlockSection = styled.section<{ isVisible: boolean }>`\r\n  position: relative;\r\n  padding: 1.5rem 0 3rem;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  margin-left: calc(-50vw + 50%);\r\n  margin-bottom: 50px;\r\n  min-height: 600px;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    // background: url('/img/svg/middleblock-bg.svg') no-repeat center center;\r\n    background-size: cover;\r\n    z-index: -1;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(28, 28, 28, 0.9);\r\n    z-index: -2; // Ensure it's under the background image\r\n  }\r\n\r\n  // The animation is applied based on the isVisible prop\r\n  animation: ${props => props.isVisible ? css`${fadeIn} 2s ease forwards` : 'none'};\r\n`;\r\n\r\n\r\nexport const Title = styled(\"h6\")`\r\n  font-size: clamp(1.2rem, 2.4vw, 10em);\r\n  font-weight: bold;\r\n  background: -webkit-linear-gradient(right, #ffffff, #ffffff);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  text-shadow: 0 0 1.5px #ffffff;\r\n  padding-left: 1rem;\r\n  text-align: center;\r\n  margin: 0 0;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  position: relative;\r\n  margin-top: 5rem;\r\n  animation: ${textNeonGlow} 3s ease-in-out infinite alternate;\r\n\r\n  .word {\r\n    display: inline-block;\r\n    animation: ${fadeInUp} 1.5s ease forwards;\r\n  }\r\n\r\n  ${Array.from({ length: 50 }, (_, index) => css`\r\n    .word-${index} {\r\n      ${generateDelay(index)};\r\n    }\r\n  `)}\r\n\r\n  &:hover {\r\n    background: none; // Remove gradient background on hover\r\n    -webkit-text-fill-color: initial; // Reset text color\r\n    color: rgb(40, 111, 255); // Apply blue color on hover\r\n    text-shadow: none; // Optionally, remove text shadow on hover\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"div\")`\r\n  padding: clamp(0rem, 0vw, 0rem) 0;\r\n  font-size: clamp(.85rem, 2.5vw, 1.5em);\r\n\r\n  .paragraph {\r\n    display: inline-block;\r\n    opacity: 0;\r\n    animation: ${slideInLeft} 2s ease forwards;\r\n  }\r\n\r\n  // Apply delayed animations to each paragraph\r\n  ${Array.from({ length: 10 }, (_, index) => css`\r\n    .paragraph-${index} {\r\n      ${generateDelay(index, 2)};\r\n    }\r\n  `)}\r\n\r\n  .subtitle {\r\n    font-weight: bold;\r\n    text-decoration: underline;\r\n    font-size: 1.1em; // Adjusted font size\r\n    margin-bottom: 0.3rem;\r\n    color: #FFFFFF; // Default color\r\n    animation: ${textNeonGlow} 4s ease-in-out infinite alternate;\r\n\r\n    &:hover {\r\n      color: rgb(40, 111, 255); // Blue hover color\r\n    }\r\n  }\r\n\r\n  \r\n  .underline {\r\n    // text-decoration: underline;\r\n    font-size: 1.2em; // Default font size for larger screens\r\n    color: #FFFFFF; // Default color\r\n  \r\n    animation: ${neonGlow} 1.5s ease-in-out infinite alternate;\r\n  \r\n    @media only screen and (max-width: 768px) {\r\n      font-size: 1em; // Smaller font size for mobile screens\r\n      color: #286fff; // Apply blue color for mobile screens\r\n    }\r\n  \r\n    &:hover {\r\n      color: rgb(40, 111, 255); // Blue hover color\r\n    }\r\n  }\r\n\r\n  .letter {\r\n    display: inline-block;\r\n    opacity: 0;\r\n    animation: ${fadeInLetters} 0.08s ease forwards;\r\n  }\r\n\r\n  // Apply dynamic delays for each letter\r\n  ${Array.from({ length: 400 }, (_, index) => css`\r\n    .letter-${index} {\r\n      ${generateDelay(index, 0.01)};\r\n    }\r\n  `)}\r\n\r\n  // Styles for mobile screens\r\n  @media only screen and (max-width: 768px) {\r\n    text-align: left;\r\n    margin: 0 1rem;\r\n    margin-top: 0em;\r\n  }\r\n\r\n  // Styles for desktop and larger screens\r\n  @media only screen and (min-width: 1024px) {\r\n    font-size: 1.2em !important; // Larger font size for desktop\r\n    text-align: left; // Align text to the left on larger screens\r\n    item-align: center;\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled(\"h2\")`\r\n  font-size: 1.4em;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #fff;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-width: 1300px;\r\n  width: 90%;\r\n  margin: auto;\r\n  gap: 2rem; // Add this line to create a margin between the left and right sections\r\n  @media only screen and (max-width: 768px) {\r\n    flex-direction: column-reverse;\r\n    align-items: center;\r\n  }\r\n  @media only screen and (max-width: 993px) {\r\n    flex-direction: column-reverse;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const ImageWrapper = styled.div<{ isVisible: boolean }>`\r\n  animation: ${slideInLeft} 1s ease forwards;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  animation: ${props => props.isVisible ? css`${slideInLeft} 1s ease forwards` : 'none'};\r\n\r\n  .intro-video {\r\n    width: 100%; // Make the video responsive and cover the available width\r\n    height: auto; // Maintain aspect ratio\r\n    max-width: clamp(250px, 50vw, 500px); // Limit the width on larger screens\r\n  }\r\n\r\n  // Specific media query for the troublesome range\r\n  @media only screen and (min-width: 765px) and (max-width: 980px) {\r\n    .intro-video {\r\n      max-height: 100%; // Ensure it does not exceed the container's height\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    animation: ${slideInUp} 1s ease forwards;\r\n    .intro-video {\r\n      max-width: 300px; // Decrease the size for mobile devices\r\n    }\r\n  }\r\n  @media only screen and (max-width: 993px) {\r\n    order: -1; // This will move the ImageWrapper above the content if flex-direction is column\r\n    width: 100%; // Adjust the width as needed to center the video\r\n    margin-bottom: -2rem; // Add some space below the video\r\n    margin-top: 2rem;\r\n  }\r\n`;"],"names":["clickAnimation","keyframes","_templateObject","_taggedTemplateLiteral","StyledButton","styled","_templateObject2","props","fixedWidth","p","color","glowing","splitTitleIntoWords","title","split","map","word","index","_jsxs","React","children","_jsx","className","concat","wrapParagraphs","text","wordIndex","elements","words","forEach","wordIdx","part","partIdx","push","modifiedPart","nextPart","length","endsWith","includes","fadeIn","textNeonGlow","StyledSubtitle","h2","_templateObject3","div","_templateObject4","withTranslation","_ref","subtitle","content","button","id","t","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","_useState3","_useState4","animationKey","setAnimationKey","ref","useRef","useEffect","thresholdArray","window","innerWidth","observer","IntersectionObserver","_ref2","entry","isIntersecting","prevKey","threshold","current","observe","unobserve","MiddleBlockSection","Row","justify","align","Title","ContentWrapper","Col","lg","md","sm","xs","GreyArea","Content","onClick","_document$getElementB","document","getElementById","scrollIntoView","behavior","ImageWrapper","autoPlay","loop","muted","playsInline","src","type","fadeInUp","neonGlow","slideInLeft","slideInUp","_templateObject5","fadeInLetters","_templateObject6","slideInRight","_templateObject7","_templateObject8","section","_templateObject9","css","_templateObject10","_templateObject11","_templateObject12","generateDelay","_templateObject13","animationsFinished","_templateObject14","baseDelay","arguments","undefined","_templateObject15","_templateObject16","_templateObject17","_templateObject18","Array","from","_","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26"],"sourceRoot":""}